name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:  
      DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
      NODE_ENV: test
      PORT: 3000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm install

    - name: Run Prisma migrations
      run: npx prisma migrate deploy --schema=src/prisma/schema.prisma

    - name: Generate Prisma Client
      run: npx prisma generate --schema=src/prisma/schema.prisma

    - name: Start Application Server
      run: npm run start:test &

    - name: Run unit tests
      run: npm run test:unit -- --coverage

    - name: Upload coverage results
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./coverage  

    - name: Run integration tests
      run: npm run test:integration
